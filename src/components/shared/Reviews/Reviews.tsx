import { v4 as uuidv4 } from 'uuid';

const FullStar = () => {
  return (
    <svg
      width='20'
      height='20'
      viewBox='0 0 20 20'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M9.16713 2.65832C9.22469 2.47578 9.33895 2.31635 9.4933 2.20318C9.64766 2.09001 9.83407 2.02899 10.0255 2.02899C10.2169 2.02899 10.4033 2.09001 10.5576 2.20318C10.712 2.31635 10.8262 2.47578 10.8838 2.65832L12.4338 7.42498H17.4338C17.632 7.41749 17.8273 7.4751 17.9897 7.58902C18.1521 7.70293 18.2728 7.86689 18.3332 8.05583C18.3937 8.24478 18.3906 8.44832 18.3245 8.63536C18.2584 8.82241 18.1329 8.98266 17.9671 9.09165L13.9088 12.0333L15.4588 16.8083C15.5201 16.9902 15.5216 17.1869 15.4632 17.3698C15.4048 17.5526 15.2894 17.7119 15.134 17.8246C14.9786 17.9372 14.7912 17.9972 14.5993 17.9957C14.4073 17.9943 14.2209 17.9316 14.0671 17.8167L10.0005 14.8417L5.94213 17.7917C5.78839 17.9066 5.60193 17.9693 5.41 17.9707C5.21807 17.9721 5.0307 17.9122 4.87527 17.7996C4.71984 17.6869 4.60449 17.5276 4.54605 17.3448C4.48762 17.1619 4.48916 16.9652 4.55046 16.7833L6.10046 12.0083L2.04213 9.06665C1.87637 8.95766 1.75084 8.79741 1.68473 8.61036C1.61862 8.42332 1.61556 8.21978 1.67603 8.03083C1.73649 7.84189 1.85715 7.67793 2.01956 7.56402C2.18198 7.4501 2.37722 7.39249 2.57546 7.39998H7.57546L9.16713 2.65832Z'
        fill='#FBAD39'
      />
    </svg>
  );
};

const EmptyStar = () => {
  return (
    <svg
      width='20'
      height='20'
      viewBox='0 0 20 20'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M9.16713 2.65832C9.22469 2.47578 9.33895 2.31635 9.4933 2.20318C9.64766 2.09001 9.83407 2.02899 10.0255 2.02899C10.2169 2.02899 10.4033 2.09001 10.5576 2.20318C10.712 2.31635 10.8262 2.47578 10.8838 2.65832L12.4338 7.42498H17.4338C17.632 7.41749 17.8273 7.4751 17.9897 7.58902C18.1521 7.70293 18.2728 7.86689 18.3332 8.05583C18.3937 8.24478 18.3906 8.44832 18.3245 8.63536C18.2584 8.82241 18.1329 8.98266 17.9671 9.09165L13.9088 12.0333L15.4588 16.8083C15.5201 16.9902 15.5216 17.1869 15.4632 17.3698C15.4048 17.5526 15.2894 17.7119 15.134 17.8246C14.9786 17.9372 14.7912 17.9972 14.5993 17.9957C14.4073 17.9943 14.2209 17.9316 14.0671 17.8167L10.0005 14.8417L5.94213 17.7917C5.78839 17.9066 5.60193 17.9693 5.41 17.9707C5.21807 17.9722 5.0307 17.9122 4.87527 17.7996C4.71984 17.6869 4.60449 17.5276 4.54605 17.3448C4.48762 17.1619 4.48916 16.9652 4.55046 16.7833L6.10046 12.0083L2.04213 9.06665C1.87637 8.95766 1.75084 8.79741 1.68473 8.61036C1.61862 8.42332 1.61556 8.21978 1.67603 8.03083C1.73649 7.84189 1.85715 7.67793 2.01956 7.56402C2.18198 7.4501 2.37722 7.39249 2.57546 7.39998H7.57546L9.16713 2.65832Z'
        stroke='#C3D4E9'
        strokeWidth='1.5'
        strokeLinecap='round'
        strokeLinejoin='round'
      />
    </svg>
  );
};

const HalfStar = () => {
  return (
    <svg
      width='20'
      height='20'
      viewBox='0 0 20 20'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <defs>
        <clipPath id='half-clip'>
          <rect width='10' height='20' />
        </clipPath>
      </defs>
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M9.16713 2.65832C9.22469 2.47578 9.33895 2.31635 9.4933 2.20318C9.64766 2.09001 9.83407 2.02899 10.0255 2.02899C10.2169 2.02899 10.4033 2.09001 10.5576 2.20318C10.712 2.31635 10.8262 2.47578 10.8838 2.65832L12.4338 7.42498H17.4338C17.632 7.41749 17.8273 7.4751 17.9897 7.58902C18.1521 7.70293 18.2728 7.86689 18.3332 8.05583C18.3937 8.24478 18.3906 8.44832 18.3245 8.63536C18.2584 8.82241 18.1329 8.98266 17.9671 9.09165L13.9088 12.0333L15.4588 16.8083C15.5201 16.9902 15.5216 17.1869 15.4632 17.3698C15.4048 17.5526 15.2894 17.7119 15.134 17.8246C14.9786 17.9372 14.7912 17.9972 14.5993 17.9957C14.4073 17.9943 14.2209 17.9316 14.0671 17.8167L10.0005 14.8417L5.94213 17.7917C5.78839 17.9066 5.60193 17.9693 5.41 17.9707C5.21807 17.9722 5.0307 17.9122 4.87527 17.7996C4.71984 17.6869 4.60449 17.5276 4.54605 17.3448C4.48762 17.1619 4.48916 16.9652 4.55046 16.7833L6.10046 12.0083L2.04213 9.06665C1.87637 8.95766 1.75084 8.79741 1.68473 8.61036C1.61862 8.42332 1.61556 8.21978 1.67603 8.03083C1.73649 7.84189 1.85715 7.67793 2.01956 7.56402C2.18198 7.4501 2.37722 7.39249 2.57546 7.39998H7.57546L9.16713 2.65832Z'
        fill='#FBAD39'
        clipPath='url(#half-clip)'
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M9.16713 2.65832C9.22469 2.47578 9.33895 2.31635 9.4933 2.20318C9.64766 2.09001 9.83407 2.02899 10.0255 2.02899C10.2169 2.02899 10.4033 2.09001 10.5576 2.20318C10.712 2.31635 10.8262 2.47578 10.8838 2.65832L12.4338 7.42498H17.4338C17.632 7.41749 17.8273 7.4751 17.9897 7.58902C18.1521 7.70293 18.2728 7.86689 18.3332 8.05583C18.3937 8.24478 18.3906 8.44832 18.3245 8.63536C18.2584 8.82241 18.1329 8.98266 17.9671 9.09165L13.9088 12.0333L15.4588 16.8083C15.5201 16.9902 15.5216 17.1869 15.4632 17.3698C15.4048 17.5526 15.2894 17.7119 15.134 17.8246C14.9786 17.9372 14.7912 17.9972 14.5993 17.9957C14.4073 17.9943 14.2209 17.9316 14.0671 17.8167L10.0005 14.8417L5.94213 17.7917C5.78839 17.9066 5.60193 17.9693 5.41 17.9707C5.21807 17.9722 5.0307 17.9122 4.87527 17.7996C4.71984 17.6869 4.60449 17.5276 4.54605 17.3448C4.48762 17.1619 4.48916 16.9652 4.55046 16.7833L6.10046 12.0083L2.04213 9.06665C1.87637 8.95766 1.75084 8.79741 1.68473 8.61036C1.61862 8.42332 1.61556 8.21978 1.67603 8.03083C1.73649 7.84189 1.85715 7.67793 2.01956 7.56402C2.18198 7.4501 2.37722 7.39249 2.57546 7.39998H7.57546L9.16713 2.65832Z'
        stroke='#FBAD39'
        strokeWidth='1.5'
        strokeLinecap='round'
        strokeLinejoin='round'
      />
    </svg>
  );
};

const Reviews = ({
  rating,
  numberOfReviews,
}: {
  rating: number;
  numberOfReviews: number;
}) => {
  const stars = [];
  const fullStars = rating < 4.7 ? Math.floor(rating) : 5;
  const halfStars = rating % 1 >= 0.2 && rating % 1 < 0.7;
  const emptyStars = 5 - fullStars - (halfStars ? 1 : 0);

  for (let i = 0; i < fullStars; i++) {
    stars.push(<FullStar key={uuidv4()} />);
  }

  if (halfStars) {
    stars.push(<HalfStar key={uuidv4()} />);
  }

  for (let i = 0; i < emptyStars; i++) {
    stars.push(<EmptyStar key={uuidv4()} />);
  }

  return (
    <div className='flex items-center gap-2 text-sm'>
      <div>
        <div className='flex'>{stars.map((star) => star)}</div>
      </div>
      <div className='text-xs font-medium tracking-wide text-gray-700 dark:text-white-200 lg:text-sm'>
        {numberOfReviews} Reviews
      </div>
    </div>
  );
};

export default Reviews;
